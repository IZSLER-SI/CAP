@model IZSLER_CAP.Models.ListaMacchinari 
@functions
    { 
    public int GetResultNumbers()
    {
        return Model.ElencoMacchinari.Count();
    }
    public string GetStringResultNumbers()
    {
        int i = GetResultNumbers();
        if (i == 0)
            return "Nessun elemento presente";
        else
        {
            if (i == 1)
                return i.ToString() + " elemento presente";
            return i.ToString() + " elementi presenti";
        }
    }
    public int InitPage(int passo)
    {
        int currPage = 1;
        int NumberOfPages=1;
        try
        { 
            currPage= @Model.CurrentPage ;
        }
        catch{currPage = 1;}
        try
        { 
            NumberOfPages= @Model.NumberOfPages ;
        }
        catch {NumberOfPages = 1;}
        if (NumberOfPages < passo)
        {//return currPage;
             int height = currPage / passo;
            if((currPage % passo)==0)
            {
                height = height - 1;
            }
            return (height * passo)+1;
        }
        if (NumberOfPages >= passo)
        {
            int height = currPage / passo;
            if((currPage % passo)==0)
            {
                height = height - 1;
            }
            return (height * passo)+1;
           
        }
        return 1;
    }
    public int EndPage(int passo)
    {
        int currPage = 1;
        int NumberOfPages = 1;
        try
        {
            currPage = @Model.CurrentPage;
        }
        catch { currPage = 1; }
        try
        {
            NumberOfPages = @Model.NumberOfPages;
        }
        catch { NumberOfPages = 1; }
        if(currPage>NumberOfPages)
        {@Model.CurrentPage =NumberOfPages ;}
        
        if (NumberOfPages < passo )
        {
            return NumberOfPages+1;
        
        }
        else
        {
            return InitPage(passo) + passo;
        }
    }
    public string GetCostoTot(decimal? costo)
    {
        if (costo.HasValue) return costo.Value.ToString("0.00000").Replace(".", ",");
        return "0,00000";
    }

    public string GetSecondario(bool flag)
    {
        if (flag) return "true";
        return "false";
    }
    public int  GetValueBool(bool flag)
    {
        if(!flag)
            return 0;
        else 
            return 1;
    }
    public string Tipologia(bool intermedio)
    {
        if (intermedio) return "Intermedio";
        return "Analisi";
    }
    public string GetCosto(IZSLER_CAP.Helpers.MyMacchinario item)
    {
        decimal? val = item.Macchi_Prezzo;
        return GetCostoTot(val);
    }
    //public string GetCostoTotDeliberato(IZSLER_CAP.Helpers.MyMacchinario item)
    //{
    //    decimal? val = item.Macchi_Prezzo_Deliberato;
    //    return GetCostoTot(val);
    //}
}
 <script type="text/javascript">
     var urlRedirect = '/Settings/Macchinari';
     $(document).ready
        (
             function () {
                 $('#sorting-Analisi_last').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('#sorting-Analisi_last').unbind('click');
                     var pageNum = $('#NumOfPages_id').val();
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum
                     };
                     callAjax(urlRedirect, emp);
                 });


                 $('#sorting-Analisi_first').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('#sorting-Analisi_first').unbind('click');
                     var pageNum = 1
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     

                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum
                     };
                     callAjax(urlRedirect, emp);
                 });

                 $('#sorting-Analisi_previous').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('#sorting-Analisi_previous').unbind('click');
                     var pageNum = parseInt($(".paginate_active").html());
                     if (pageNum >= 2)
                     { pageNum = pageNum - 1; }
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum
                     };
                     callAjax(urlRedirect, emp);
                 });

                 $('#sorting-Analisi_next').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('#sorting-Analisi_next').unbind('click');
                     var pageNum = parseInt($(".paginate_active").html());
                     pageNum = pageNum + 1;
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum
                     };
                     callAjax(urlRedirect, emp);
                 });
                 $('.page-number').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('.page-number').unbind('click');
                     var pageNum = parseInt($(this).html());
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum
                     };
                     callAjax(urlRedirect, emp);
                 });


                 $('select[id^="NumEntities"]').change
                (
                  function () {
                      // alert('change NumEntities');
                      var idSelVal = $(this).val();
                      var table_search = $('#table_search').val();
                    
                      var emp = { NumEntities: idSelVal,
                          SearchDescription: table_search
                      };
                      callAjax(urlRedirect, emp);
                  }
                )

                 $('input[id^="table_search"]').change
                (function () {
                    //alert('change table_search');
                    var idSelVal = $(this).val();
                    var NumEntities = $('#NumEntities').val();
                    
                    var emp = { NumEntities: NumEntities,
                        SearchDescription: idSelVal
                    };
                    callAjax(urlRedirect, emp);
                })


             }
        );
     
</script>

  
       <div id="myGridMacchinari">

    
            <div class="table-header blue-gradient button-height">
	        <div class="float-right">
		        Ricerca &nbsp;<input type="text" name="table_search" id="table_search" value="@Model.SearchDescription" class="input mid-margin-left"/>
	        </div>Mostra&nbsp;
            @Html.DropDownListFor(x => x.NumEntities, Model.EntitiesN, null, new { Class = "select blue-gradient glossy replacement" })&nbsp;
            &nbsp;[@GetStringResultNumbers()]
            <input type="hidden" value="@Model.NumberOfPages" id = "NumOfPages_id" />
         </div>
       
          <table class="table responsive-table">
                <thead>
                <tr>
                    <th scope="col" width="10%" class="align-center ">Apparecchiatura dedicata</th>
                    <th scope="col" width="40%" class="align-center ">Descrizione</th>
                    <th scope="col" width="20%" class="align-center ">Gruppo</th>
                    <th scope="col" width="10%" class="align-center ">Costo al minuto</th>
                    @*<th scope="col" width="10%" class="align-center ">Costo Deliberato</th>*@
                    <th scope="col" width="110px" class="align-center">Azioni</th>
                </tr>
            </thead>
        <tfoot class="dataTables_footer">
		    <tr>
            <td colspan="6" class = "button-height align-right" style ="background:transparent;border:0px;color:#FFFFFF;">
               @if( Model.Data.Count ()>0)
                {
                <div class="dataTables_paginate paging_full_numbers" id="sorting-Analisi_paginate" style="padding:0px">
                <a tabindex="0" class="first paginate_button" id="sorting-Analisi_first">Inizio</a>
                <a tabindex="0" class="previous paginate_button" id="sorting-Analisi_previous">Precedente</a>
                <span>
                

                @{
                    int passo =5;
                    int start = @InitPage(passo );
                    int end = @EndPage(passo );

                    for (int i = start; i < end; i++)
                    {
                        if (i == Model.CurrentPage)
                        {
                           <a class="paginate_active" style ="">@i</a>
                        }
                        else
                        {
                            <a class="page-number paginate_button" href="#" style ="">@i</a>
                        }
                    }
                }
                </span>
                <a tabindex="0" class="next paginate_button paginate_button" id="sorting-Analisi_next">Successivo</a>
                <a tabindex="0" class="last paginate_button paginate_button" id="sorting-Analisi_last">Fine</a>
                </div>
                }
                else
                {
                    <span>&nbsp;</span>
                }
            </td>
           </tr>
	    </tfoot>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    @*<td><input type="radio" name="indirizzi" id="@item.Macchi_ID" value="@item.Macchi_ID"
                    onclick ="saveDataPPMacchinario(@Model.ValPos_ID, @item.Macchi_ID,'@item.Macchi_Desc','@GetCostoTotDeliberato(@item)',@GetSecondario(@Model.FlagSecondario) );"/>
                    </td>*@
                   <td class="align-center" >@item.Macchi_Codice</td>
                    <td class="align-center" >
                        @Html.DisplayFor(modelItem => item.Macchi_Desc)
                    </td>
                    <td class="align-center" >
                        @Html.DisplayFor(modelItem => item.Macchi_Grurep_Desc )
                    </td> 
                    <td class="align-center" >
                        @GetCosto(@item)
                    </td>
               @*     <td class="align-center" >
                        @GetCostoTotDeliberato(@item)
                    </td>*@
                    <td  class="low-padding align-center">
                    @Html.ActionLink("Modifica", "MacchinarioEdit", new { id = item.Macchi_ID }, new { Class = "button compact icon-gear" }) 
                </td>
                </tr> 
            }
        </tbody> 
       </table>
              
    </div>
      <script type="text/javascript">          $("#table_search").focus(); 	</script>
