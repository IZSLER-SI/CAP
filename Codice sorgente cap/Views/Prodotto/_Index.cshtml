@model IZSLER_CAP.Models.ListaIndexProdottoModel
@{
    ViewBag.Title = "Prodotti";
}
@using IZSLER_CAP.Helpers

@functions
{

    public string Checked(int val)
    {
        if (val == @Model.FiltroStato)
            return "checked";
        return "";
    }
     public string SetLitagbg1(string color)
     {

        // return  "tag "+ color + "-gradient";
         return "tag " + color + "-bg";

     }
     public string SetLabelCosto(decimal? costo)
     {
         if (costo != null)
             return string.Format("{0:f2}", costo) + " €";
         return "";
     }

     public int GetResultNumbers()
     {
         return Model.Data.Count();
     }
     public string GetStringResultNumbers()
     {
         int i = GetResultNumbers();
         if (i == 0)
             return "Nessun elemento presente";
         else
         {
             if (i == 1)
                 return i.ToString() + " elemento presente";
             return i.ToString() + " elementi presenti";
         }
     }
     public int InitPage(int passo)
     {
         int currPage = 1;
         int NumberOfPages = 1;
         try
         {
             currPage = @Model.CurrentPage;
         }
         catch { currPage = 1; }
         try
         {
             NumberOfPages = @Model.NumberOfPages;
         }
         catch { NumberOfPages = 1; }
         if (NumberOfPages < passo)
         {//return currPage;
             int height = currPage / passo;
             if ((currPage % passo) == 0)
             {
                 height = height - 1;
             }
             return (height * passo) + 1;
         }
         if (NumberOfPages >= passo)
         {
             int height = currPage / passo;
             if ((currPage % passo) == 0)
             {
                 height = height - 1;
             }
             return (height * passo) + 1;

         }
         return 1;
     }
     public int EndPage(int passo)
     {
         int currPage = 1;
         int NumberOfPages = 1;
         try
         {
             currPage = @Model.CurrentPage;
         }
         catch { currPage = 1; }
         try
         {
             NumberOfPages = @Model.NumberOfPages;
         }
         catch { NumberOfPages = 1; }
         if (currPage > NumberOfPages)
         { @Model.CurrentPage = NumberOfPages; }

         if (NumberOfPages < passo)
         {
             return NumberOfPages + 1;

         }
         else
         {
             return InitPage(passo) + passo;
         }
     }
     
}


 <script type="text/javascript">

     var urlDestination = '/Prodotto/Index';

     $(document).ready
        (
             function () {

                 $('input[name="button-radio"]').change(function (e) {
                     // e.stopImmediatePropagation();
                     //e.stopPropagation();
                     if ($(this).is(':checked')) {
                         e.stopImmediatePropagation();
                         e.stopPropagation();
                         $('input[name="button-radio"]').unbind('change');
                         var filtroStato_ID = $(this).val();

                         var pageNum = $('#NumOfPages_id').val();
                         var NumEntities = $('#NumEntities').val();
                         var table_search = $('#table_search').val();
                         var ValPos_id = $('#ValPos_id').val();
                         var Sec_id = $('#Sec_id').val();

                         var emp = { NumEntities: NumEntities,
                             SearchDescription: table_search,
                             CurrentPage: pageNum,
                             valpos_id: ValPos_id,
                             sec: Sec_id,
                             FiltroStato: filtroStato_ID
                         };
                         callAjax(urlDestination, emp);
                         return;
                     }
                 });

                 $('#sorting-Analisi_last').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('#sorting-Analisi_last').unbind('click');
                     var pageNum = $('#NumOfPages_id').val();
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     var ValPos_id = $('#ValPos_id').val();
                     var Sec_id = $('#Sec_id').val();
                     var filtroStato_ID = $('input[name="button-radio"]:checked').val();
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum,
                         valpos_id: ValPos_id,
                         sec: Sec_id,
                         FiltroStato: filtroStato_ID
                     };
                     callAjax(urlDestination, emp);
                 });


                 $('#sorting-Analisi_first').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('#sorting-Analisi_first').unbind('click');
                     var pageNum = 1
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     var ValPos_id = $('#ValPos_id').val();
                     var Sec_id = $('#Sec_id').val();
                     var filtroStato_ID = $('input[name="button-radio"]:checked').val();
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum,
                         valpos_id: ValPos_id,
                         sec: Sec_id,
                         FiltroStato: filtroStato_ID
                     };
                     callAjax(urlDestination, emp);
                 });

                 $('#sorting-Analisi_previous').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('#sorting-Analisi_previous').unbind('click');
                     var pageNum = parseInt($(".paginate_active").html());
                     if (pageNum >= 2)
                     { pageNum = pageNum - 1; }
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     var ValPos_id = $('#ValPos_id').val();
                     var Sec_id = $('#Sec_id').val();
                     var filtroStato_ID = $('input[name="button-radio"]:checked').val();
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum,
                         valpos_id: ValPos_id,
                         sec: Sec_id,
                         FiltroStato: filtroStato_ID
                     };
                     callAjax(urlDestination, emp);
                 });

                 $('#sorting-Analisi_next').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('#sorting-Analisi_next').unbind('click');
                     var pageNum = parseInt($(".paginate_active").html());
                     pageNum = pageNum + 1;
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     var ValPos_id = $('#ValPos_id').val();
                     var Sec_id = $('#Sec_id').val();
                     var filtroStato_ID = $('input[name="button-radio"]:checked').val();
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum,
                         valpos_id: ValPos_id,
                         sec: Sec_id,
                         FiltroStato: filtroStato_ID
                     };
                     callAjax(urlDestination, emp);
                 });

                 $('.page-number').click(function (e) {
                     e.stopImmediatePropagation();
                     e.stopPropagation();
                     $('.page-number').unbind('click');
                     var pageNum = parseInt($(this).html());
                     var NumEntities = $('#NumEntities').val();
                     var table_search = $('#table_search').val();
                     var ValPos_id = $('#ValPos_id').val();
                     var Sec_id = $('#Sec_id').val();
                     var filtroStato_ID = $('input[name="button-radio"]:checked').val();
                     var emp = { NumEntities: NumEntities,
                         SearchDescription: table_search,
                         CurrentPage: pageNum,
                         valpos_id: ValPos_id,
                         sec: Sec_id,
                         FiltroStato: filtroStato_ID
                     };
                     callAjax(urlDestination, emp);
                 });


                 $('select[id^="NumEntities"]').change
                (
                  function () {
                      // alert('change NumEntities');
                      var idSelVal = $(this).val();
                      var table_search = $('#table_search').val();
                      var ValPos_id = $('#ValPos_id').val();
                      var Sec_id = $('#Sec_id').val();
                      var filtroStato_ID = $('input[name="button-radio"]:checked').val();
                      var emp = { NumEntities: idSelVal,
                          SearchDescription: table_search,
                          valpos_id: ValPos_id,
                          sec: Sec_id,
                          FiltroStato: filtroStato_ID
                      };
                      callAjax(urlDestination, emp);
                  }
                )

                 $('input[id^="table_search"]').change
                (function () {
                    //alert('change table_search');
                    var idSelVal = $(this).val();
                    var NumEntities = $('#NumEntities').val();
                    var ValPos_id = $('#ValPos_id').val();
                    var Sec_id = $('#Sec_id').val();
                    var filtroStato_ID = $('input[name="button-radio"]:checked').val();

                    var emp = { NumEntities: NumEntities,
                        SearchDescription: idSelVal,
                        valpos_id: ValPos_id,
                        sec: Sec_id,
                        FiltroStato: filtroStato_ID
                    };
                    callAjax(urlDestination, emp);
                })


             }
        );
     
     
</script>



<div id="myGrid"  style="width:100%">

     <div class="table-header blue-gradient button-height">
     <div>
            <span class="button-group">
            <label for="button-radio-ALL"  class="button">
			        <input type="radio" name="button-radio"  id="button-radio-ALL"  value="0" @Checked(0)/>Tutto
            </label>
            <label for="button-radio-VALOR"  class="button green-active">
			        <input type="radio" name="button-radio"  id="button-radio-VALOR"  value="2" @Checked(2)/>Valorizzare
            </label>
            <label for="button-radio-VALID"  class="button orange-active">
			        <input type="radio" name="button-radio"  id="button-radio-VALID"  value="3" @Checked(3)/>Validare
            </label>
            <label for="button-radio-INDEL"  class="button orange-active">
			        <input type="radio" name="button-radio"  id="button-radio-INDEL"  value="5" @Checked(5)/>In Delibera
            </label>
            <label for="button-radio-DELIB"  class="button red-active">
			        <input type="radio" name="button-radio"  id="button-radio-DELIB"  value="6" @Checked(6)/>Deliberata
            </label>
            </span>
            </div>
	        <div class="float-right">
		        Ricerca &nbsp;<input type="text" name="table_search" id="table_search" value="@Model.SearchDescription" class="input mid-margin-left"/>
	        </div>Mostra&nbsp;
            @Html.DropDownListFor(x => x.NumEntities, Model.EntitiesN, null, new { Class = "select blue-gradient glossy replacement" })&nbsp;
            &nbsp;[@GetStringResultNumbers()]
         </div>
    <table  class="table responsive-table">
        <thead>
            <tr>
          @*      <th scope="col" width="1%" class="align-center" >ID</th>*@
		        <th scope="col" width="14%" class="align-center hide-on-mobile">Codice</th>
		        <th scope="col" width="30%" class="align-center hide-on-mobile-portrait">Prodotto</th>
		        <th scope="col" width="10%" class="align-center">Gruppo prodotto</th>
                <th scope="col" width="5%" class="align-center">Utente</th>
                <th scope="col" width="9%" class="align-center">Stato</th>
                <th scope="col" width="9%" class="align-center">Costo unitario</th>
                <th scope="col" width="9%" class="align-center">Unit&agrave; di misura</th>
                <th scope="col" width="9%" class="hide-on-tablet">Bloccata</th>
                <th scope="col" width="4%" class="align-center ">&nbsp;</th>
                <th scope="col" width="80" class="align-center">Azioni</th>
          
            </tr>
        </thead>
        <tfoot class="dataTables_footer">
		    <tr>
            <td colspan="10" class = "button-height align-right" style ="background:transparent;border:0px;color:#FFFFFF;">
            @if (Model.Data.Count() > 0)
            {
            <div class="dataTables_paginate paging_full_numbers" id="sorting-Analisi_paginate" style="padding:0px">
                <a tabindex="0" class="first paginate_button" id="sorting-Analisi_first">Inizio</a>
                <a tabindex="0" class="previous paginate_button" id="sorting-Analisi_previous">Precedente</a>
                <span>
                

                @{
                int passo = 5;
                int start = @InitPage(passo);
                int end = @EndPage(passo);

                for (int i = start; i < end; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                           <a class="paginate_active" style ="">@i</a>
                    }
                    else
                    {
                            <a class="page-number paginate_button" href="#" style ="">@i</a>
                    }
                }
                }
                </span>
                <a tabindex="0" class="next paginate_button paginate_button" id="sorting-Analisi_next">Successivo</a>
                <a tabindex="0" class="last paginate_button paginate_button" id="sorting-Analisi_last">Fine</a>
                </div>
            }
            else { <span>&nbsp;</span>}
            </td>
       

		    </tr>
	    </tfoot>
        <tbody>
        
        @foreach (var item in Model.Data)
        {
            <tr>

                <td class="align-center">
                    @Html.DisplayFor(modelItem => item.Prodot_Codice)
                </td>
                <td class="align-center">
                    @Html.DisplayFor(modelItem => item.Prodot_Desc)
                </td>
                <td class="align-center">
                 @Html.DisplayFor(modelItem => item.Prodot_Reparto_Desc)
                </td>
                 <td class="align-center" style="overflow:hidden;">
                    @Html.DisplayFor(modelItem => item.Prodot_utente_denominazione)
                </td>
                <td class="align-center">
                 
                        @Html.DisplayFor(modelItem => item.Prodot_Stato_Descrizione)
                </td>
                <td class="align-center">
                    @Html.Label(@SetLabelCosto(item.Prodot_CostoUnitario))
                </td>
               <td class="align-center">
                    @Html.DisplayFor(modelItem => item.Prodot_UnitaMisura_descrizione)
                </td>
                <td class="align-center">
                
                    @{
                        string val = "";
                        if (item.Prodot_Flg_Bloccato == false)
                        {

                            val = @SetLitagbg1("green");
                        }
                        else
                        {
                            val = SetLitagbg1("red");
                        }
                        ViewBag.SetLitagbg = val;
                    }
                    <small class="@ViewBag.SetLitagbg">

                   @if (item.Prodot_Flg_Bloccato == false)
                   { 
                        @Html.Label("Attivo") ;
                   }
                   else
                   { 
                        @Html.Label("Bloccato") ;
                   }

                    
                    </small>
                </td>
                <td  class="low-padding align-center">   
                        <a class="button compact icon-arrow" href="#" 
                        onclick="apriPopUp('/Report/Show/@item.Prodot_ID.ToString()?T=P','Report',
                        'scrollbars=yes,resizable=yes, width=950,height=850,status=no,location=no,toolbar=no');"></a>
                        </td>

                <td  class="low-padding align-center">
    
                    @Html.ActionLink("Modifica","ProdottoEdit", new { id = item.Prodot_ID }, new { Class = "button compact icon-gear" }) 
                    
                   
                </td>
              
            </tr>
        }


        </tbody>
    </table>

</div>
<script type ="text/jscript">    loadScriptRef("startProdotti.js");</script>
<script type="text/javascript">    $("#table_search").focus(); 	</script>
  




